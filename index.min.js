var ThreadPoolLite=function(){"use strict";let a=URL.createObjectURL(new Blob(["(function(){self.addEventListener(\"message\",e=>{let result=eval(e.data);result instanceof Promise?result.then(a=>{self.postMessage(a)}).catch(a=>{self.postMessage(a)}):self.postMessage(result)})})();"]));return class{constructor(b=navigator.hardwareConcurrency){let c=[],d=[],f=new WeakMap;for(let g,h=0;h<b;h++)g=new Worker(a),c[h]=g,g.addEventListener("message",a=>{if(f.get(g)(a.data),0<d.length){let a=d.shift();g.postMessage(a[0]),f.set(g,a[1])}else this.working=this.working.filter(a=>g!==a),c.push(g),f.set(g,null)});this.tasks=f,this.worker=c,this.queue=d,this.working=[]}run(a){let b=null,c=new Promise(a=>{b=a});if(this.queue.push(["("+a.toString()+")()",b]),0<this.worker.length){let a=this.worker.pop(),b=this.queue.shift();a.postMessage(b[0]),this.working.push(a),this.tasks.set(a,b[1])}return c}terminate(){for(let a in this.working)a instanceof Worker&&a.terminate();this.working=[]}getActiveCount(){return this.working.length}getIdleCount(){return this.worker.length}}}();